<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartions.dabolo.mapper.ActivityMapper">
	<resultMap type="java.util.HashMap" id="allResult"></resultMap>
	<insert id="saveActivity" parameterType="hashmap">
		insert into
		Activity(activity_title,
		activity_status,
		activity_desc,
		activity_id,
		activity_creator,
		activity_sign_up_start ,
		activity_sign_up_end ,
		activity_start ,
		activity_end ,
		activity_allow_persion ,
		activity_charge ,
		activity_location ,
		activity_note ,
		activity_is_public,
		activity_location_latitude,
		activity_location_longitude,
		activity_location_geohash
		) values(
		#{activity_title},
		#{activity_status},
		#{activity_desc},
		#{activity_id},
		#{activity_creator},
		#{activity_sign_up_start} ,
		#{activity_sign_up_end} ,
		#{activity_start} ,
		#{activity_end} ,
		#{activity_allow_persion} ,
		#{activity_charge} ,
		#{activity_location} ,
		#{activity_note} ,
		#{activity_is_public},
		#{activity_location_latitude},
		#{activity_location_longitude},
		#{activity_location_geohash}
		);
	</insert>
	<insert id="saveType" parameterType="hashmap">

		insert into ActivityAndType
		(activity_and_type_type_id,activity_and_type_activity_id)
		values
		<foreach collection="list" item="item" open="" separator=","
			close="">
			(#{item.activity_and_type_type_id},#{item.activity_and_type_activity_id})
		</foreach>
	</insert>
	<insert id="saveLabel" parameterType="hashmap">

		insert into
		ActivityAndLabel(
		activity_and_lable_activity_id,
		activity_and_label_label_name
		)
		values
		<foreach collection="list" item="item" open="" separator=","
			close="">
			(#{item.activity_and_lable_activity_id},
			#{item.activity_and_label_label_name})
		</foreach>


	</insert>

	<insert id="savePic" parameterType="list">
		
			insert into Picture( pic_id ,
			pic_name ,
			pic_creator ,
			pic_activity_id ,
			pic_face,pic_type ) values
			<foreach collection="list" item="item" open="" separator=","
			close="">
			(
			#{item.pic_id} ,
			#{item.pic_name} ,
			#{item.pic_creator} ,
			#{item.pic_activity_id} ,
			#{item.pic_face},#{item.pic_type} )
		</foreach>

	</insert>
	<select id="getActivityInfo" resultType="hashMap">
		select * from Activity
		where activity_id=#{activityId}
	</select>
	<select id="getActivityType" resultType="hashMap">
		select * from ActivityAndType,ActivityType where
		ActivityType.activity_type_id=ActivityAndType.activity_and_type_type_id
		and activity_and_type_activity_id in (
		<foreach collection="list" item="activityId" open=""
			separator="," close="">
			#{activityId}
		</foreach>
		)
	</select>
	<select id="getActivityLabel" resultType="hashMap">
		select * from ActivityAndLabel where activity_and_lable_activity_id in
		(
		<foreach collection="list" item="activityId" open=""
			separator="," close="">
			#{activityId}
		</foreach>
		)
	</select>
	<select id="getActivityPic" resultType="hashMap">
		select * from Picture where pic_activity_id in (
		<foreach collection="list" item="activityId" open=""
			separator="," close="">
			#{activityId}
		</foreach>
		)
	</select>
	<select id="getLabelList" resultType="hashMap">
		select label_id as
		id,label_name as name from Label;
	</select>
	<select id="getTypeList" resultType="hashMap">
		select activity_type_id as
		id,activity_type_name as name from ActivityType;
	</select>
	<select id="getActivityList" resultType="hashMap">
		select * from Activity;
	</select>
	<delete id="deletePic">
		delete from Picture where pic_name=#{picName}
	</delete>
	<update id="setCover">
		update Picture set pic_face=1 where pic_name!=#{picName} and pic_activity_id=#{activityId};
		update Picture set pic_face=1 where pic_name=#{picName} and pic_activity_id=#{activityId}
	</update>
	<update id="editActivity">
		update Activity 
		<set>
		<if test="activity_status != null">activity_status=#{activity_status},</if>
		<if test="activity_desc != null">activity_desc=#{activity_desc},</if>
		<if test="activity_sign_up_start != null">activity_sign_up_start=#{activity_sign_up_start} ,</if>
		<if test="activity_sign_up_end != null">activity_sign_up_end=#{activity_sign_up_end} ,</if>
		<if test="activity_start != null">activity_start=#{activity_start} ,</if>
		<if test="activity_end != null">activity_end=#{activity_end} ,</if>
		<if test="activity_allow_persion != null">activity_allow_persion=#{activity_allow_persion} ,</if>
		<if test="activity_charge != null">activity_charge=#{activity_charge} ,</if>
		<if test="activity_location != null">activity_location=#{activity_location} ,</if>
		<if test="activity_note != null">activity_note=#{activity_note} ,</if>
		<if test="activity_is_public != null">activity_is_public=#{activity_is_public},</if>
		<if test="activity_location_latitude != null">activity_location_latitude=#{activity_location_latitude},</if>
		<if test="activity_location_longitude != null">activity_location_longitude=#{activity_location_longitude},</if>
		<if test="activity_location_geohash != null">activity_location_geohash=#{activity_location_geohash}</if>
		</set>
		where activity_id=#{activity_id}
	</update>
	<delete id="removeType">
	delete from ActivityAndType where activity_and_type_type_id in (
	<foreach collection="list" item="typeId" open=""
			separator="," close="">
			#{typeId}
		</foreach>) and activity_and_type_activity_id=#{activityId}
	</delete>
	<delete id="removeLabel">
	delete from ActivityAndLabel where activity_and_label_label_name in (
	<foreach collection="list" item="labelName" open=""
			separator="," close="">
			#{labelName}
		</foreach>) and activity_and_lable_activity_id=#{activityId}
	</delete>
	<select id="getParticipateList" resultType="hashMap">
	 select * from ActivityAndUser where activity_and_user_activity_id=#{activityId} and activity_and_user_participate=1;
	</select>
	<select id="getCountComment" resultType="Integer">
	select count(*) as count from Comment where comment_object=#{activityId}
	</select>
	<select id="getCommentList" resultType="hashMap">
	select * from Comment where comment_object=#{activityId} limit #{start},#{pageSize}
	</select>
	<select id="getCommentPicList" resultType="hashMap">
	select * from CommentAndPic inner join Picture on CommentAndPic.comment_and_pic_pic_id=Picture.pic_id where comment_and_pic_comment_id in (
		<foreach collection="list" item="commentId" open=""
			separator="," close="">
			#{commentId}
		</foreach>
	)
	</select>
</mapper>  